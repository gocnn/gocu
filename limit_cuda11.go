// Code generated by generator.go; DO NOT EDIT.
//go:build cuda11
// +build cuda11

package gocu

/*
#include <cuda.h>
*/
import "C"

// Constants for Limit.
const (
	CuLimitDevRuntimePendingLaunchCount Limit = C.CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT // GPU device runtime pending launch count
	CuLimitDevRuntimeSyncDepth          Limit = C.CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH           // GPU device runtime launch synchronize depth
	CuLimitMallocHeapSize               Limit = C.CU_LIMIT_MALLOC_HEAP_SIZE                 // GPU malloc heap size
	CuLimitMaxL2FetchGranularity        Limit = C.CU_LIMIT_MAX_L2_FETCH_GRANULARITY         // A value between 0 and 128 that indicates the maximum fetch granularity of L2 (in Bytes). This is a hint
	CuLimitPersistingL2CacheSize        Limit = C.CU_LIMIT_PERSISTING_L2_CACHE_SIZE         // A size in bytes for L2 persisting lines cache size
	CuLimitPrintfFifoSize               Limit = C.CU_LIMIT_PRINTF_FIFO_SIZE                 // GPU printf FIFO size
	CuLimitStackSize                    Limit = C.CU_LIMIT_STACK_SIZE                       // GPU thread stack size
)

// LimitMessages maps Limit values to their string representations.
var LimitMessages = map[Limit]string{
	CuLimitDevRuntimePendingLaunchCount: "CuLimitDevRuntimePendingLaunchCount",
	CuLimitDevRuntimeSyncDepth:          "CuLimitDevRuntimeSyncDepth",
	CuLimitMallocHeapSize:               "CuLimitMallocHeapSize",
	CuLimitMaxL2FetchGranularity:        "CuLimitMaxL2FetchGranularity",
	CuLimitPersistingL2CacheSize:        "CuLimitPersistingL2CacheSize",
	CuLimitPrintfFifoSize:               "CuLimitPrintfFifoSize",
	CuLimitStackSize:                    "CuLimitStackSize",
}
