// Code generated by generator.go; DO NOT EDIT.
//go:build cuda11
// +build cuda11

package gocu

/*
#include <cuda.h>
*/
import "C"

// Constants for DeviceAttr.
const (
	CuDeviceAttributeAsyncEngineCount                       DeviceAttr = C.CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT                           // Number of asynchronous engines
	CuDeviceAttributeCanFlushRemoteWrites                   DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_FLUSH_REMOTE_WRITES                      // The ::CU_STREAM_WAIT_VALUE_FLUSH flag and the ::CU_STREAM_MEM_OP_FLUSH_REMOTE_WRITES MemOp are supported on the device. See \ref CUDA_MEMOP for additional details.
	CuDeviceAttributeCanMapHostMemory                       DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY                          // Device can map host memory into CUDA address space
	CuDeviceAttributeCanTex2dGather                         DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER                             // Deprecated, do not use.
	CuDeviceAttributeCanUse64BitStreamMemOps                DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_USE_64_BIT_STREAM_MEM_OPS                // 64-bit operations are supported in ::cuStreamBatchMemOp and related APIs.
	CuDeviceAttributeCanUse64BitStreamMemOpsV2              DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_USE_64_BIT_STREAM_MEM_OPS_V2             // 64-bit operations are supported in ::cuStreamBatchMemOp_v2 and related v2 MemOp APIs.
	CuDeviceAttributeCanUseHostPointerForRegisteredMem      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_USE_HOST_POINTER_FOR_REGISTERED_MEM      // Device can access host registered memory at the same virtual address as the CPU
	CuDeviceAttributeCanUseStreamMemOps                     DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_MEM_OPS                       // ::cuStreamBatchMemOp and related APIs are supported.
	CuDeviceAttributeCanUseStreamWaitValueNor               DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_WAIT_VALUE_NOR                // ::CU_STREAM_WAIT_VALUE_NOR is supported.
	CuDeviceAttributeCanUseStreamWaitValueNorV2             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_WAIT_VALUE_NOR_V2             // ::CU_STREAM_WAIT_VALUE_NOR is supported by v2 MemOp APIs.
	CuDeviceAttributeClockRate                              DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CLOCK_RATE                                   // Typical clock frequency in kilohertz
	CuDeviceAttributeClusterLaunch                          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CLUSTER_LAUNCH                               // Indicates device supports cluster launch
	CuDeviceAttributeComputeCapabilityMajor                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR                     // Major compute capability version number
	CuDeviceAttributeComputeCapabilityMinor                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR                     // Minor compute capability version number
	CuDeviceAttributeComputeMode                            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_COMPUTE_MODE                                 // Compute mode (See ::CUcomputemode for details)
	CuDeviceAttributeComputePreemptionSupported             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_COMPUTE_PREEMPTION_SUPPORTED                 // Device supports compute preemption.
	CuDeviceAttributeConcurrentKernels                      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS                           // Device can possibly execute multiple kernels concurrently
	CuDeviceAttributeConcurrentManagedAccess                DeviceAttr = C.CU_DEVICE_ATTRIBUTE_CONCURRENT_MANAGED_ACCESS                    // Device can coherently access managed memory concurrently with the CPU
	CuDeviceAttributeCooperativeLaunch                      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_COOPERATIVE_LAUNCH                           // Device supports launching cooperative kernels via ::cuLaunchCooperativeKernel
	CuDeviceAttributeCooperativeMultiDeviceLaunch           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_COOPERATIVE_MULTI_DEVICE_LAUNCH              // Deprecated, ::cuLaunchCooperativeKernelMultiDevice is deprecated.
	CuDeviceAttributeDeferredMappingCudaArraySupported      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_DEFERRED_MAPPING_CUDA_ARRAY_SUPPORTED        // Device supports deferred mapping CUDA arrays and CUDA mipmapped arrays
	CuDeviceAttributeDirectManagedMemAccessFromHost         DeviceAttr = C.CU_DEVICE_ATTRIBUTE_DIRECT_MANAGED_MEM_ACCESS_FROM_HOST          // The host can directly access managed memory on the device without migration.
	CuDeviceAttributeDmaBufSupported                        DeviceAttr = C.CU_DEVICE_ATTRIBUTE_DMA_BUF_SUPPORTED                            // Device supports buffer sharing with dma_buf mechanism.
	CuDeviceAttributeEccEnabled                             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_ECC_ENABLED                                  // Device has ECC support enabled
	CuDeviceAttributeGenericCompressionSupported            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GENERIC_COMPRESSION_SUPPORTED                // Device supports compression of memory
	CuDeviceAttributeGlobalL1CacheSupported                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GLOBAL_L1_CACHE_SUPPORTED                    // Device supports caching globals in L1
	CuDeviceAttributeGlobalMemoryBusWidth                   DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH                      // Global memory bus width in bits
	CuDeviceAttributeGpuDirectRdmaFlushWritesOptions        DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_FLUSH_WRITES_OPTIONS         // The returned attribute shall be interpreted as a bitmask, where the individual bits are described by the ::CUflushGPUDirectRDMAWritesOptions enum
	CuDeviceAttributeGpuDirectRdmaSupported                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_SUPPORTED                    // Device supports GPUDirect RDMA APIs, like nvidia_p2p_get_pages (see https://docs.nvidia.com/cuda/gpudirect-rdma for more information)
	CuDeviceAttributeGpuDirectRdmaWithCudaVmmSupported      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_WITH_CUDA_VMM_SUPPORTED      // Device supports specifying the GPUDirect RDMA flag with ::cuMemCreate
	CuDeviceAttributeGpuDirectRdmaWritesOrdering            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_WRITES_ORDERING              // GPUDirect RDMA writes to the device do not need to be flushed for consumers within the scope indicated by the returned attribute. See ::CUGPUDirectRDMAWritesOrdering for the numerical values returned here.
	CuDeviceAttributeGpuOverlap                             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_GPU_OVERLAP                                  // Device can possibly copy memory and execute a kernel concurrently. Deprecated. Use instead CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT.
	CuDeviceAttributeHandleTypePosixFileDescriptorSupported DeviceAttr = C.CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_POSIX_FILE_DESCRIPTOR_SUPPORTED  // Device supports exporting memory to a posix file descriptor with ::cuMemExportToShareableHandle, if requested via ::cuMemCreate
	CuDeviceAttributeHandleTypeWin32HandleSupported         DeviceAttr = C.CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_WIN32_HANDLE_SUPPORTED           // Device supports exporting memory to a Win32 NT handle with ::cuMemExportToShareableHandle, if requested via ::cuMemCreate
	CuDeviceAttributeHandleTypeWin32KmtHandleSupported      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_WIN32_KMT_HANDLE_SUPPORTED       // Device supports exporting memory to a Win32 KMT handle with ::cuMemExportToShareableHandle, if requested via ::cuMemCreate
	CuDeviceAttributeHostNativeAtomicSupported              DeviceAttr = C.CU_DEVICE_ATTRIBUTE_HOST_NATIVE_ATOMIC_SUPPORTED                 // Link between the device and the host supports native atomic operations (this is a placeholder attribute, and is not supported on any current hardware)
	CuDeviceAttributeHostRegisterSupported                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_HOST_REGISTER_SUPPORTED                      // Device supports host memory registration via ::cudaHostRegister.
	CuDeviceAttributeIntegrated                             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_INTEGRATED                                   // Device is integrated with host memory
	CuDeviceAttributeKernelExecTimeout                      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT                          // Specifies whether there is a run time limit on kernels
	CuDeviceAttributeL2CacheSize                            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE                                // Size of L2 cache in bytes
	CuDeviceAttributeLocalL1CacheSupported                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_LOCAL_L1_CACHE_SUPPORTED                     // Device supports caching locals in L1
	CuDeviceAttributeManagedMemory                          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MANAGED_MEMORY                               // Device can allocate managed memory on this system
	CuDeviceAttributeMaximumSurface1dLayeredLayers          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS             // Maximum layers in a 1D layered surface
	CuDeviceAttributeMaximumSurface1dLayeredWidth           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH              // Maximum 1D layered surface width
	CuDeviceAttributeMaximumSurface1dWidth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH                      // Maximum 1D surface width
	CuDeviceAttributeMaximumSurface2dHeight                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT                     // Maximum 2D surface height
	CuDeviceAttributeMaximumSurface2dLayeredHeight          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT             // Maximum 2D layered surface height
	CuDeviceAttributeMaximumSurface2dLayeredLayers          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS             // Maximum layers in a 2D layered surface
	CuDeviceAttributeMaximumSurface2dLayeredWidth           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH              // Maximum 2D layered surface width
	CuDeviceAttributeMaximumSurface2dWidth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH                      // Maximum 2D surface width
	CuDeviceAttributeMaximumSurface3dDepth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH                      // Maximum 3D surface depth
	CuDeviceAttributeMaximumSurface3dHeight                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT                     // Maximum 3D surface height
	CuDeviceAttributeMaximumSurface3dWidth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH                      // Maximum 3D surface width
	CuDeviceAttributeMaximumSurfacecubemapLayeredLayers     DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS        // Maximum layers in a cubemap layered surface
	CuDeviceAttributeMaximumSurfacecubemapLayeredWidth      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH         // Maximum cubemap layered surface width
	CuDeviceAttributeMaximumSurfacecubemapWidth             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH                 // Maximum cubemap surface width
	CuDeviceAttributeMaximumTexture1dLayeredLayers          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS             // Maximum layers in a 1D layered texture
	CuDeviceAttributeMaximumTexture1dLayeredWidth           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH              // Maximum 1D layered texture width
	CuDeviceAttributeMaximumTexture1dLinearWidth            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH               // Deprecated, do not use. Use cudaDeviceGetTexture1DLinearMaxWidth() or cuDeviceGetTexture1DLinearMaxWidth() instead.
	CuDeviceAttributeMaximumTexture1dMipmappedWidth         DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH            // Maximum mipmapped 1D texture width
	CuDeviceAttributeMaximumTexture1dWidth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH                      // Maximum 1D texture width
	CuDeviceAttributeMaximumTexture2dGatherHeight           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT              // Maximum 2D texture height if CUDA_ARRAY3D_TEXTURE_GATHER is set
	CuDeviceAttributeMaximumTexture2dGatherWidth            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH               // Maximum 2D texture width if CUDA_ARRAY3D_TEXTURE_GATHER is set
	CuDeviceAttributeMaximumTexture2dHeight                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT                     // Maximum 2D texture height
	CuDeviceAttributeMaximumTexture2dLayeredHeight          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT             // Maximum 2D layered texture height
	CuDeviceAttributeMaximumTexture2dLayeredLayers          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS             // Maximum layers in a 2D layered texture
	CuDeviceAttributeMaximumTexture2dLayeredWidth           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH              // Maximum 2D layered texture width
	CuDeviceAttributeMaximumTexture2dLinearHeight           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT              // Maximum 2D linear texture height
	CuDeviceAttributeMaximumTexture2dLinearPitch            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH               // Maximum 2D linear texture pitch in bytes
	CuDeviceAttributeMaximumTexture2dLinearWidth            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH               // Maximum 2D linear texture width
	CuDeviceAttributeMaximumTexture2dMipmappedHeight        DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT           // Maximum mipmapped 2D texture height
	CuDeviceAttributeMaximumTexture2dMipmappedWidth         DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH            // Maximum mipmapped 2D texture width
	CuDeviceAttributeMaximumTexture2dWidth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH                      // Maximum 2D texture width
	CuDeviceAttributeMaximumTexture3dDepth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH                      // Maximum 3D texture depth
	CuDeviceAttributeMaximumTexture3dDepthAlternate         DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE            // Alternate maximum 3D texture depth
	CuDeviceAttributeMaximumTexture3dHeight                 DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT                     // Maximum 3D texture height
	CuDeviceAttributeMaximumTexture3dHeightAlternate        DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE           // Alternate maximum 3D texture height
	CuDeviceAttributeMaximumTexture3dWidth                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH                      // Maximum 3D texture width
	CuDeviceAttributeMaximumTexture3dWidthAlternate         DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE            // Alternate maximum 3D texture width
	CuDeviceAttributeMaximumTexturecubemapLayeredLayers     DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS        // Maximum layers in a cubemap layered texture
	CuDeviceAttributeMaximumTexturecubemapLayeredWidth      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH         // Maximum cubemap layered texture width/height
	CuDeviceAttributeMaximumTexturecubemapWidth             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH                 // Maximum cubemap texture width/height
	CuDeviceAttributeMaxAccessPolicyWindowSize              DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_ACCESS_POLICY_WINDOW_SIZE                // Maximum value of CUaccessPolicyWindow::num_bytes.
	CuDeviceAttributeMaxBlocksPerMultiprocessor             DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_BLOCKS_PER_MULTIPROCESSOR                // Maximum number of blocks per multiprocessor
	CuDeviceAttributeMaxBlockDimX                           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X                              // Maximum block dimension X
	CuDeviceAttributeMaxBlockDimY                           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y                              // Maximum block dimension Y
	CuDeviceAttributeMaxBlockDimZ                           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z                              // Maximum block dimension Z
	CuDeviceAttributeMaxGridDimX                            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X                               // Maximum grid dimension X
	CuDeviceAttributeMaxGridDimY                            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y                               // Maximum grid dimension Y
	CuDeviceAttributeMaxGridDimZ                            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z                               // Maximum grid dimension Z
	CuDeviceAttributeMaxPersistingL2CacheSize               DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_PERSISTING_L2_CACHE_SIZE                 // Maximum L2 persisting lines capacity setting in bytes.
	CuDeviceAttributeMaxPitch                               DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_PITCH                                    // Maximum pitch in bytes allowed by memory copies
	CuDeviceAttributeMaxRegistersPerBlock                   DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK                      // Maximum number of 32-bit registers available per block
	CuDeviceAttributeMaxRegistersPerMultiprocessor          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR             // Maximum number of 32-bit registers available per multiprocessor
	CuDeviceAttributeMaxSharedMemoryPerBlock                DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK                  // Maximum shared memory available per block in bytes
	CuDeviceAttributeMaxSharedMemoryPerBlockOptin           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK_OPTIN            // Maximum optin shared memory per block
	CuDeviceAttributeMaxSharedMemoryPerMultiprocessor       DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR         // Maximum shared memory available per multiprocessor in bytes
	CuDeviceAttributeMaxThreadsPerBlock                     DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK                        // Maximum number of threads per block
	CuDeviceAttributeMaxThreadsPerMultiprocessor            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR               // Maximum resident threads per multiprocessor
	CuDeviceAttributeMemoryClockRate                        DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE                            // Peak memory clock frequency in kilohertz
	CuDeviceAttributeMemoryPoolsSupported                   DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MEMORY_POOLS_SUPPORTED                       // Device supports using the ::cuMemAllocAsync and ::cuMemPool family of APIs
	CuDeviceAttributeMempoolSupportedHandleTypes            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MEMPOOL_SUPPORTED_HANDLE_TYPES               // Handle types supported with mempool based IPC
	CuDeviceAttributeMultiprocessorCount                    DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT                         // Number of multiprocessors on device
	CuDeviceAttributeMultiGpuBoard                          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD                              // Device is on a multi-GPU board
	CuDeviceAttributeMultiGpuBoardGroupId                   DeviceAttr = C.CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD_GROUP_ID                     // Unique id for a group of devices on the same multi-GPU board
	CuDeviceAttributePageableMemoryAccess                   DeviceAttr = C.CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS                       // Device supports coherently accessing pageable memory without calling cudaHostRegister on it
	CuDeviceAttributePageableMemoryAccessUsesHostPageTables DeviceAttr = C.CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS_USES_HOST_PAGE_TABLES // Device accesses pageable memory via the host's page tables.
	CuDeviceAttributePciBusId                               DeviceAttr = C.CU_DEVICE_ATTRIBUTE_PCI_BUS_ID                                   // PCI bus ID of the device
	CuDeviceAttributePciDeviceId                            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID                                // PCI device ID of the device
	CuDeviceAttributePciDomainId                            DeviceAttr = C.CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID                                // PCI domain ID of the device
	CuDeviceAttributeReadOnlyHostRegisterSupported          DeviceAttr = C.CU_DEVICE_ATTRIBUTE_READ_ONLY_HOST_REGISTER_SUPPORTED            // Device supports using the ::cuMemHostRegister flag ::CU_MEMHOSTERGISTER_READ_ONLY to register memory that must be mapped as read-only to the GPU
	CuDeviceAttributeReservedSharedMemoryPerBlock           DeviceAttr = C.CU_DEVICE_ATTRIBUTE_RESERVED_SHARED_MEMORY_PER_BLOCK             // Shared memory reserved by CUDA driver per block in bytes
	CuDeviceAttributeSingleToDoublePrecisionPerfRatio       DeviceAttr = C.CU_DEVICE_ATTRIBUTE_SINGLE_TO_DOUBLE_PRECISION_PERF_RATIO        // Ratio of single precision performance (in floating-point operations per second) to double precision performance
	CuDeviceAttributeSparseCudaArraySupported               DeviceAttr = C.CU_DEVICE_ATTRIBUTE_SPARSE_CUDA_ARRAY_SUPPORTED                  // Device supports sparse CUDA arrays and sparse CUDA mipmapped arrays
	CuDeviceAttributeStreamPrioritiesSupported              DeviceAttr = C.CU_DEVICE_ATTRIBUTE_STREAM_PRIORITIES_SUPPORTED                  // Device supports stream priorities
	CuDeviceAttributeSurfaceAlignment                       DeviceAttr = C.CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT                            // Alignment requirement for surfaces
	CuDeviceAttributeTccDriver                              DeviceAttr = C.CU_DEVICE_ATTRIBUTE_TCC_DRIVER                                   // Device is using TCC driver model
	CuDeviceAttributeTextureAlignment                       DeviceAttr = C.CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT                            // Alignment requirement for textures
	CuDeviceAttributeTexturePitchAlignment                  DeviceAttr = C.CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT                      // Pitch alignment requirement for textures
	CuDeviceAttributeTimelineSemaphoreInteropSupported      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_TIMELINE_SEMAPHORE_INTEROP_SUPPORTED         // External timeline semaphore interop is supported on the device
	CuDeviceAttributeTotalConstantMemory                    DeviceAttr = C.CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY                        // Memory available on device for __constant__ variables in a CUDA C kernel in bytes
	CuDeviceAttributeUnifiedAddressing                      DeviceAttr = C.CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING                           // Device shares a unified address space with the host
	CuDeviceAttributeVirtualMemoryManagementSupported       DeviceAttr = C.CU_DEVICE_ATTRIBUTE_VIRTUAL_MEMORY_MANAGEMENT_SUPPORTED          // Device supports virtual memory management APIs like ::cuMemAddressReserve, ::cuMemCreate, ::cuMemMap and related APIs
	CuDeviceAttributeWarpSize                               DeviceAttr = C.CU_DEVICE_ATTRIBUTE_WARP_SIZE                                    // Warp size in threads
)

// DeviceAttrMessages maps DeviceAttr values to their string representations.
var DeviceAttrMessages = map[DeviceAttr]string{
	CuDeviceAttributeAsyncEngineCount:                       "CuDeviceAttributeAsyncEngineCount",
	CuDeviceAttributeCanFlushRemoteWrites:                   "CuDeviceAttributeCanFlushRemoteWrites",
	CuDeviceAttributeCanMapHostMemory:                       "CuDeviceAttributeCanMapHostMemory",
	CuDeviceAttributeCanTex2dGather:                         "CuDeviceAttributeCanTex2dGather",
	CuDeviceAttributeCanUse64BitStreamMemOps:                "CuDeviceAttributeCanUse64BitStreamMemOps",
	CuDeviceAttributeCanUse64BitStreamMemOpsV2:              "CuDeviceAttributeCanUse64BitStreamMemOpsV2",
	CuDeviceAttributeCanUseHostPointerForRegisteredMem:      "CuDeviceAttributeCanUseHostPointerForRegisteredMem",
	CuDeviceAttributeCanUseStreamMemOps:                     "CuDeviceAttributeCanUseStreamMemOps",
	CuDeviceAttributeCanUseStreamWaitValueNor:               "CuDeviceAttributeCanUseStreamWaitValueNor",
	CuDeviceAttributeCanUseStreamWaitValueNorV2:             "CuDeviceAttributeCanUseStreamWaitValueNorV2",
	CuDeviceAttributeClockRate:                              "CuDeviceAttributeClockRate",
	CuDeviceAttributeClusterLaunch:                          "CuDeviceAttributeClusterLaunch",
	CuDeviceAttributeComputeCapabilityMajor:                 "CuDeviceAttributeComputeCapabilityMajor",
	CuDeviceAttributeComputeCapabilityMinor:                 "CuDeviceAttributeComputeCapabilityMinor",
	CuDeviceAttributeComputeMode:                            "CuDeviceAttributeComputeMode",
	CuDeviceAttributeComputePreemptionSupported:             "CuDeviceAttributeComputePreemptionSupported",
	CuDeviceAttributeConcurrentKernels:                      "CuDeviceAttributeConcurrentKernels",
	CuDeviceAttributeConcurrentManagedAccess:                "CuDeviceAttributeConcurrentManagedAccess",
	CuDeviceAttributeCooperativeLaunch:                      "CuDeviceAttributeCooperativeLaunch",
	CuDeviceAttributeCooperativeMultiDeviceLaunch:           "CuDeviceAttributeCooperativeMultiDeviceLaunch",
	CuDeviceAttributeDeferredMappingCudaArraySupported:      "CuDeviceAttributeDeferredMappingCudaArraySupported",
	CuDeviceAttributeDirectManagedMemAccessFromHost:         "CuDeviceAttributeDirectManagedMemAccessFromHost",
	CuDeviceAttributeDmaBufSupported:                        "CuDeviceAttributeDmaBufSupported",
	CuDeviceAttributeEccEnabled:                             "CuDeviceAttributeEccEnabled",
	CuDeviceAttributeGenericCompressionSupported:            "CuDeviceAttributeGenericCompressionSupported",
	CuDeviceAttributeGlobalL1CacheSupported:                 "CuDeviceAttributeGlobalL1CacheSupported",
	CuDeviceAttributeGlobalMemoryBusWidth:                   "CuDeviceAttributeGlobalMemoryBusWidth",
	CuDeviceAttributeGpuDirectRdmaFlushWritesOptions:        "CuDeviceAttributeGpuDirectRdmaFlushWritesOptions",
	CuDeviceAttributeGpuDirectRdmaSupported:                 "CuDeviceAttributeGpuDirectRdmaSupported",
	CuDeviceAttributeGpuDirectRdmaWithCudaVmmSupported:      "CuDeviceAttributeGpuDirectRdmaWithCudaVmmSupported",
	CuDeviceAttributeGpuDirectRdmaWritesOrdering:            "CuDeviceAttributeGpuDirectRdmaWritesOrdering",
	CuDeviceAttributeGpuOverlap:                             "CuDeviceAttributeGpuOverlap",
	CuDeviceAttributeHandleTypePosixFileDescriptorSupported: "CuDeviceAttributeHandleTypePosixFileDescriptorSupported",
	CuDeviceAttributeHandleTypeWin32HandleSupported:         "CuDeviceAttributeHandleTypeWin32HandleSupported",
	CuDeviceAttributeHandleTypeWin32KmtHandleSupported:      "CuDeviceAttributeHandleTypeWin32KmtHandleSupported",
	CuDeviceAttributeHostNativeAtomicSupported:              "CuDeviceAttributeHostNativeAtomicSupported",
	CuDeviceAttributeHostRegisterSupported:                  "CuDeviceAttributeHostRegisterSupported",
	CuDeviceAttributeIntegrated:                             "CuDeviceAttributeIntegrated",
	CuDeviceAttributeKernelExecTimeout:                      "CuDeviceAttributeKernelExecTimeout",
	CuDeviceAttributeL2CacheSize:                            "CuDeviceAttributeL2CacheSize",
	CuDeviceAttributeLocalL1CacheSupported:                  "CuDeviceAttributeLocalL1CacheSupported",
	CuDeviceAttributeManagedMemory:                          "CuDeviceAttributeManagedMemory",
	CuDeviceAttributeMaximumSurface1dLayeredLayers:          "CuDeviceAttributeMaximumSurface1dLayeredLayers",
	CuDeviceAttributeMaximumSurface1dLayeredWidth:           "CuDeviceAttributeMaximumSurface1dLayeredWidth",
	CuDeviceAttributeMaximumSurface1dWidth:                  "CuDeviceAttributeMaximumSurface1dWidth",
	CuDeviceAttributeMaximumSurface2dHeight:                 "CuDeviceAttributeMaximumSurface2dHeight",
	CuDeviceAttributeMaximumSurface2dLayeredHeight:          "CuDeviceAttributeMaximumSurface2dLayeredHeight",
	CuDeviceAttributeMaximumSurface2dLayeredLayers:          "CuDeviceAttributeMaximumSurface2dLayeredLayers",
	CuDeviceAttributeMaximumSurface2dLayeredWidth:           "CuDeviceAttributeMaximumSurface2dLayeredWidth",
	CuDeviceAttributeMaximumSurface2dWidth:                  "CuDeviceAttributeMaximumSurface2dWidth",
	CuDeviceAttributeMaximumSurface3dDepth:                  "CuDeviceAttributeMaximumSurface3dDepth",
	CuDeviceAttributeMaximumSurface3dHeight:                 "CuDeviceAttributeMaximumSurface3dHeight",
	CuDeviceAttributeMaximumSurface3dWidth:                  "CuDeviceAttributeMaximumSurface3dWidth",
	CuDeviceAttributeMaximumSurfacecubemapLayeredLayers:     "CuDeviceAttributeMaximumSurfacecubemapLayeredLayers",
	CuDeviceAttributeMaximumSurfacecubemapLayeredWidth:      "CuDeviceAttributeMaximumSurfacecubemapLayeredWidth",
	CuDeviceAttributeMaximumSurfacecubemapWidth:             "CuDeviceAttributeMaximumSurfacecubemapWidth",
	CuDeviceAttributeMaximumTexture1dLayeredLayers:          "CuDeviceAttributeMaximumTexture1dLayeredLayers",
	CuDeviceAttributeMaximumTexture1dLayeredWidth:           "CuDeviceAttributeMaximumTexture1dLayeredWidth",
	CuDeviceAttributeMaximumTexture1dLinearWidth:            "CuDeviceAttributeMaximumTexture1dLinearWidth",
	CuDeviceAttributeMaximumTexture1dMipmappedWidth:         "CuDeviceAttributeMaximumTexture1dMipmappedWidth",
	CuDeviceAttributeMaximumTexture1dWidth:                  "CuDeviceAttributeMaximumTexture1dWidth",
	CuDeviceAttributeMaximumTexture2dGatherHeight:           "CuDeviceAttributeMaximumTexture2dGatherHeight",
	CuDeviceAttributeMaximumTexture2dGatherWidth:            "CuDeviceAttributeMaximumTexture2dGatherWidth",
	CuDeviceAttributeMaximumTexture2dHeight:                 "CuDeviceAttributeMaximumTexture2dHeight",
	CuDeviceAttributeMaximumTexture2dLayeredHeight:          "CuDeviceAttributeMaximumTexture2dLayeredHeight",
	CuDeviceAttributeMaximumTexture2dLayeredLayers:          "CuDeviceAttributeMaximumTexture2dLayeredLayers",
	CuDeviceAttributeMaximumTexture2dLayeredWidth:           "CuDeviceAttributeMaximumTexture2dLayeredWidth",
	CuDeviceAttributeMaximumTexture2dLinearHeight:           "CuDeviceAttributeMaximumTexture2dLinearHeight",
	CuDeviceAttributeMaximumTexture2dLinearPitch:            "CuDeviceAttributeMaximumTexture2dLinearPitch",
	CuDeviceAttributeMaximumTexture2dLinearWidth:            "CuDeviceAttributeMaximumTexture2dLinearWidth",
	CuDeviceAttributeMaximumTexture2dMipmappedHeight:        "CuDeviceAttributeMaximumTexture2dMipmappedHeight",
	CuDeviceAttributeMaximumTexture2dMipmappedWidth:         "CuDeviceAttributeMaximumTexture2dMipmappedWidth",
	CuDeviceAttributeMaximumTexture2dWidth:                  "CuDeviceAttributeMaximumTexture2dWidth",
	CuDeviceAttributeMaximumTexture3dDepth:                  "CuDeviceAttributeMaximumTexture3dDepth",
	CuDeviceAttributeMaximumTexture3dDepthAlternate:         "CuDeviceAttributeMaximumTexture3dDepthAlternate",
	CuDeviceAttributeMaximumTexture3dHeight:                 "CuDeviceAttributeMaximumTexture3dHeight",
	CuDeviceAttributeMaximumTexture3dHeightAlternate:        "CuDeviceAttributeMaximumTexture3dHeightAlternate",
	CuDeviceAttributeMaximumTexture3dWidth:                  "CuDeviceAttributeMaximumTexture3dWidth",
	CuDeviceAttributeMaximumTexture3dWidthAlternate:         "CuDeviceAttributeMaximumTexture3dWidthAlternate",
	CuDeviceAttributeMaximumTexturecubemapLayeredLayers:     "CuDeviceAttributeMaximumTexturecubemapLayeredLayers",
	CuDeviceAttributeMaximumTexturecubemapLayeredWidth:      "CuDeviceAttributeMaximumTexturecubemapLayeredWidth",
	CuDeviceAttributeMaximumTexturecubemapWidth:             "CuDeviceAttributeMaximumTexturecubemapWidth",
	CuDeviceAttributeMaxAccessPolicyWindowSize:              "CuDeviceAttributeMaxAccessPolicyWindowSize",
	CuDeviceAttributeMaxBlocksPerMultiprocessor:             "CuDeviceAttributeMaxBlocksPerMultiprocessor",
	CuDeviceAttributeMaxBlockDimX:                           "CuDeviceAttributeMaxBlockDimX",
	CuDeviceAttributeMaxBlockDimY:                           "CuDeviceAttributeMaxBlockDimY",
	CuDeviceAttributeMaxBlockDimZ:                           "CuDeviceAttributeMaxBlockDimZ",
	CuDeviceAttributeMaxGridDimX:                            "CuDeviceAttributeMaxGridDimX",
	CuDeviceAttributeMaxGridDimY:                            "CuDeviceAttributeMaxGridDimY",
	CuDeviceAttributeMaxGridDimZ:                            "CuDeviceAttributeMaxGridDimZ",
	CuDeviceAttributeMaxPersistingL2CacheSize:               "CuDeviceAttributeMaxPersistingL2CacheSize",
	CuDeviceAttributeMaxPitch:                               "CuDeviceAttributeMaxPitch",
	CuDeviceAttributeMaxRegistersPerBlock:                   "CuDeviceAttributeMaxRegistersPerBlock",
	CuDeviceAttributeMaxRegistersPerMultiprocessor:          "CuDeviceAttributeMaxRegistersPerMultiprocessor",
	CuDeviceAttributeMaxSharedMemoryPerBlock:                "CuDeviceAttributeMaxSharedMemoryPerBlock",
	CuDeviceAttributeMaxSharedMemoryPerBlockOptin:           "CuDeviceAttributeMaxSharedMemoryPerBlockOptin",
	CuDeviceAttributeMaxSharedMemoryPerMultiprocessor:       "CuDeviceAttributeMaxSharedMemoryPerMultiprocessor",
	CuDeviceAttributeMaxThreadsPerBlock:                     "CuDeviceAttributeMaxThreadsPerBlock",
	CuDeviceAttributeMaxThreadsPerMultiprocessor:            "CuDeviceAttributeMaxThreadsPerMultiprocessor",
	CuDeviceAttributeMemoryClockRate:                        "CuDeviceAttributeMemoryClockRate",
	CuDeviceAttributeMemoryPoolsSupported:                   "CuDeviceAttributeMemoryPoolsSupported",
	CuDeviceAttributeMempoolSupportedHandleTypes:            "CuDeviceAttributeMempoolSupportedHandleTypes",
	CuDeviceAttributeMultiprocessorCount:                    "CuDeviceAttributeMultiprocessorCount",
	CuDeviceAttributeMultiGpuBoard:                          "CuDeviceAttributeMultiGpuBoard",
	CuDeviceAttributeMultiGpuBoardGroupId:                   "CuDeviceAttributeMultiGpuBoardGroupId",
	CuDeviceAttributePageableMemoryAccess:                   "CuDeviceAttributePageableMemoryAccess",
	CuDeviceAttributePageableMemoryAccessUsesHostPageTables: "CuDeviceAttributePageableMemoryAccessUsesHostPageTables",
	CuDeviceAttributePciBusId:                               "CuDeviceAttributePciBusId",
	CuDeviceAttributePciDeviceId:                            "CuDeviceAttributePciDeviceId",
	CuDeviceAttributePciDomainId:                            "CuDeviceAttributePciDomainId",
	CuDeviceAttributeReadOnlyHostRegisterSupported:          "CuDeviceAttributeReadOnlyHostRegisterSupported",
	CuDeviceAttributeReservedSharedMemoryPerBlock:           "CuDeviceAttributeReservedSharedMemoryPerBlock",
	CuDeviceAttributeSingleToDoublePrecisionPerfRatio:       "CuDeviceAttributeSingleToDoublePrecisionPerfRatio",
	CuDeviceAttributeSparseCudaArraySupported:               "CuDeviceAttributeSparseCudaArraySupported",
	CuDeviceAttributeStreamPrioritiesSupported:              "CuDeviceAttributeStreamPrioritiesSupported",
	CuDeviceAttributeSurfaceAlignment:                       "CuDeviceAttributeSurfaceAlignment",
	CuDeviceAttributeTccDriver:                              "CuDeviceAttributeTccDriver",
	CuDeviceAttributeTextureAlignment:                       "CuDeviceAttributeTextureAlignment",
	CuDeviceAttributeTexturePitchAlignment:                  "CuDeviceAttributeTexturePitchAlignment",
	CuDeviceAttributeTimelineSemaphoreInteropSupported:      "CuDeviceAttributeTimelineSemaphoreInteropSupported",
	CuDeviceAttributeTotalConstantMemory:                    "CuDeviceAttributeTotalConstantMemory",
	CuDeviceAttributeUnifiedAddressing:                      "CuDeviceAttributeUnifiedAddressing",
	CuDeviceAttributeVirtualMemoryManagementSupported:       "CuDeviceAttributeVirtualMemoryManagementSupported",
	CuDeviceAttributeWarpSize:                               "CuDeviceAttributeWarpSize",
}
